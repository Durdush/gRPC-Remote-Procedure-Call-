// Code generated by protoc-gen-go. DO NOT EDIT.
// source: basic/bi-directional-streaming-API/proto/chat.proto

package chat

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ChatServiceRequest struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatServiceRequest) Reset()         { *m = ChatServiceRequest{} }
func (m *ChatServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ChatServiceRequest) ProtoMessage()    {}
func (*ChatServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ebb2a0e4ca6ad49, []int{0}
}

func (m *ChatServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatServiceRequest.Unmarshal(m, b)
}
func (m *ChatServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatServiceRequest.Marshal(b, m, deterministic)
}
func (m *ChatServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatServiceRequest.Merge(m, src)
}
func (m *ChatServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ChatServiceRequest.Size(m)
}
func (m *ChatServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChatServiceRequest proto.InternalMessageInfo

func (m *ChatServiceRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ChatServiceResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatServiceResponse) Reset()         { *m = ChatServiceResponse{} }
func (m *ChatServiceResponse) String() string { return proto.CompactTextString(m) }
func (*ChatServiceResponse) ProtoMessage()    {}
func (*ChatServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ebb2a0e4ca6ad49, []int{1}
}

func (m *ChatServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatServiceResponse.Unmarshal(m, b)
}
func (m *ChatServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatServiceResponse.Marshal(b, m, deterministic)
}
func (m *ChatServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatServiceResponse.Merge(m, src)
}
func (m *ChatServiceResponse) XXX_Size() int {
	return xxx_messageInfo_ChatServiceResponse.Size(m)
}
func (m *ChatServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChatServiceResponse proto.InternalMessageInfo

func (m *ChatServiceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ChatServiceRequest)(nil), "ChatServiceRequest")
	proto.RegisterType((*ChatServiceResponse)(nil), "ChatServiceResponse")
}

func init() {
	proto.RegisterFile("basic/bi-directional-streaming-API/proto/chat.proto", fileDescriptor_1ebb2a0e4ca6ad49)
}

var fileDescriptor_1ebb2a0e4ca6ad49 = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x4e, 0x4a, 0x2c, 0xce,
	0x4c, 0xd6, 0x4f, 0xca, 0xd4, 0x4d, 0xc9, 0x2c, 0x4a, 0x4d, 0x2e, 0xc9, 0xcc, 0xcf, 0x4b, 0xcc,
	0xd1, 0x2d, 0x2e, 0x29, 0x4a, 0x4d, 0xcc, 0xcd, 0xcc, 0x4b, 0xd7, 0x75, 0x0c, 0xf0, 0xd4, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x4f, 0xce, 0x48, 0x2c, 0xd1, 0x03, 0x33, 0x95, 0xf4, 0xb8, 0x84,
	0x9c, 0x33, 0x12, 0x4b, 0x82, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x83, 0x52, 0x0b, 0x4b, 0x53,
	0x8b, 0x4b, 0x84, 0x24, 0xb8, 0xd8, 0x73, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0x25, 0x18, 0x15,
	0x18, 0x35, 0x38, 0x83, 0x60, 0x5c, 0x25, 0x7d, 0x2e, 0x61, 0x14, 0xf5, 0xc5, 0x05, 0xf9, 0x79,
	0xc5, 0xa9, 0xb8, 0x35, 0x18, 0x85, 0x70, 0x89, 0x20, 0x69, 0x70, 0xce, 0xcf, 0x2b, 0x49, 0xcc,
	0xcc, 0x4b, 0x2d, 0x12, 0xb2, 0xe1, 0xe2, 0x46, 0x12, 0x17, 0x12, 0xd6, 0xc3, 0x74, 0x86, 0x94,
	0x88, 0x1e, 0x16, 0xbb, 0x34, 0x18, 0x0d, 0x18, 0x93, 0xd8, 0xc0, 0xae, 0x37, 0x06, 0x04, 0x00,
	0x00, 0xff, 0xff, 0xa0, 0x59, 0x3b, 0xfd, 0xf4, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatServiceContainerClient is the client API for ChatServiceContainer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServiceContainerClient interface {
	ChatService(ctx context.Context, opts ...grpc.CallOption) (ChatServiceContainer_ChatServiceClient, error)
}

type chatServiceContainerClient struct {
	cc *grpc.ClientConn
}

func NewChatServiceContainerClient(cc *grpc.ClientConn) ChatServiceContainerClient {
	return &chatServiceContainerClient{cc}
}

func (c *chatServiceContainerClient) ChatService(ctx context.Context, opts ...grpc.CallOption) (ChatServiceContainer_ChatServiceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatServiceContainer_serviceDesc.Streams[0], "/ChatServiceContainer/ChatService", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatServiceContainerChatServiceClient{stream}
	return x, nil
}

type ChatServiceContainer_ChatServiceClient interface {
	Send(*ChatServiceRequest) error
	Recv() (*ChatServiceResponse, error)
	grpc.ClientStream
}

type chatServiceContainerChatServiceClient struct {
	grpc.ClientStream
}

func (x *chatServiceContainerChatServiceClient) Send(m *ChatServiceRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatServiceContainerChatServiceClient) Recv() (*ChatServiceResponse, error) {
	m := new(ChatServiceResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChatServiceContainerServer is the server API for ChatServiceContainer service.
type ChatServiceContainerServer interface {
	ChatService(ChatServiceContainer_ChatServiceServer) error
}

func RegisterChatServiceContainerServer(s *grpc.Server, srv ChatServiceContainerServer) {
	s.RegisterService(&_ChatServiceContainer_serviceDesc, srv)
}

func _ChatServiceContainer_ChatService_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatServiceContainerServer).ChatService(&chatServiceContainerChatServiceServer{stream})
}

type ChatServiceContainer_ChatServiceServer interface {
	Send(*ChatServiceResponse) error
	Recv() (*ChatServiceRequest, error)
	grpc.ServerStream
}

type chatServiceContainerChatServiceServer struct {
	grpc.ServerStream
}

func (x *chatServiceContainerChatServiceServer) Send(m *ChatServiceResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatServiceContainerChatServiceServer) Recv() (*ChatServiceRequest, error) {
	m := new(ChatServiceRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ChatServiceContainer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ChatServiceContainer",
	HandlerType: (*ChatServiceContainerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ChatService",
			Handler:       _ChatServiceContainer_ChatService_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "basic/bi-directional-streaming-API/proto/chat.proto",
}
