// Code generated by protoc-gen-go. DO NOT EDIT.
// source: basic/server-streaming-API/proto/messages.proto

package messages

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DataPacketContainer struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Code                 string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataPacketContainer) Reset()         { *m = DataPacketContainer{} }
func (m *DataPacketContainer) String() string { return proto.CompactTextString(m) }
func (*DataPacketContainer) ProtoMessage()    {}
func (*DataPacketContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_9258f114a7336aee, []int{0}
}

func (m *DataPacketContainer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPacketContainer.Unmarshal(m, b)
}
func (m *DataPacketContainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPacketContainer.Marshal(b, m, deterministic)
}
func (m *DataPacketContainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPacketContainer.Merge(m, src)
}
func (m *DataPacketContainer) XXX_Size() int {
	return xxx_messageInfo_DataPacketContainer.Size(m)
}
func (m *DataPacketContainer) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPacketContainer.DiscardUnknown(m)
}

var xxx_messageInfo_DataPacketContainer proto.InternalMessageInfo

func (m *DataPacketContainer) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DataPacketContainer) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DataPacketContainer) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type DataPacketRequest struct {
	ReqDataPacket        bool     `protobuf:"varint,1,opt,name=req_data_packet,json=reqDataPacket,proto3" json:"req_data_packet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataPacketRequest) Reset()         { *m = DataPacketRequest{} }
func (m *DataPacketRequest) String() string { return proto.CompactTextString(m) }
func (*DataPacketRequest) ProtoMessage()    {}
func (*DataPacketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9258f114a7336aee, []int{1}
}

func (m *DataPacketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPacketRequest.Unmarshal(m, b)
}
func (m *DataPacketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPacketRequest.Marshal(b, m, deterministic)
}
func (m *DataPacketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPacketRequest.Merge(m, src)
}
func (m *DataPacketRequest) XXX_Size() int {
	return xxx_messageInfo_DataPacketRequest.Size(m)
}
func (m *DataPacketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPacketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DataPacketRequest proto.InternalMessageInfo

func (m *DataPacketRequest) GetReqDataPacket() bool {
	if m != nil {
		return m.ReqDataPacket
	}
	return false
}

type DataPacketResponse struct {
	ResDataPacket        *DataPacketContainer `protobuf:"bytes,1,opt,name=res_data_packet,json=resDataPacket,proto3" json:"res_data_packet,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DataPacketResponse) Reset()         { *m = DataPacketResponse{} }
func (m *DataPacketResponse) String() string { return proto.CompactTextString(m) }
func (*DataPacketResponse) ProtoMessage()    {}
func (*DataPacketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9258f114a7336aee, []int{2}
}

func (m *DataPacketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPacketResponse.Unmarshal(m, b)
}
func (m *DataPacketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPacketResponse.Marshal(b, m, deterministic)
}
func (m *DataPacketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPacketResponse.Merge(m, src)
}
func (m *DataPacketResponse) XXX_Size() int {
	return xxx_messageInfo_DataPacketResponse.Size(m)
}
func (m *DataPacketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPacketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DataPacketResponse proto.InternalMessageInfo

func (m *DataPacketResponse) GetResDataPacket() *DataPacketContainer {
	if m != nil {
		return m.ResDataPacket
	}
	return nil
}

func init() {
	proto.RegisterType((*DataPacketContainer)(nil), "DataPacketContainer")
	proto.RegisterType((*DataPacketRequest)(nil), "DataPacketRequest")
	proto.RegisterType((*DataPacketResponse)(nil), "DataPacketResponse")
}

func init() {
	proto.RegisterFile("basic/server-streaming-API/proto/messages.proto", fileDescriptor_9258f114a7336aee)
}

var fileDescriptor_9258f114a7336aee = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x50, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x35, 0x2a, 0x7e, 0x6c, 0x11, 0x71, 0xea, 0x21, 0x78, 0xaa, 0x39, 0x88, 0x97, 0x26, 0x52,
	0x8f, 0x7a, 0x50, 0xf4, 0xe2, 0x41, 0x28, 0xf1, 0x07, 0x94, 0x69, 0xf2, 0x28, 0x8b, 0x74, 0x37,
	0x99, 0x59, 0xfb, 0xfb, 0xa5, 0xab, 0x35, 0x81, 0x78, 0xdb, 0xf7, 0xb5, 0x33, 0x6f, 0x4c, 0xb1,
	0x64, 0xb5, 0x55, 0xa1, 0x90, 0x0d, 0x64, 0xaa, 0x41, 0xc0, 0x6b, 0xeb, 0x56, 0xd3, 0xe7, 0xf9,
	0x5b, 0xd1, 0x88, 0x0f, 0xbe, 0x58, 0x43, 0x95, 0x57, 0xd0, 0x3c, 0xc2, 0x0c, 0x66, 0xfc, 0xca,
	0x81, 0xe7, 0x5c, 0x7d, 0x22, 0xbc, 0x78, 0x17, 0xd8, 0x3a, 0x08, 0xa5, 0xe6, 0xf8, 0xd7, 0x98,
	0x26, 0x93, 0xe4, 0xf6, 0xb4, 0xdc, 0x41, 0x9a, 0x98, 0x51, 0x0d, 0xad, 0xc4, 0x36, 0xc1, 0x7a,
	0x97, 0xee, 0x47, 0xb5, 0x4f, 0x11, 0x99, 0xc3, 0xca, 0xd7, 0x48, 0x0f, 0xa2, 0x14, 0xdf, 0xd9,
	0x83, 0xb9, 0xe8, 0xc6, 0x94, 0x68, 0xbf, 0xa0, 0x81, 0x6e, 0xcc, 0xb9, 0xa0, 0x5d, 0xd4, 0x1c,
	0x78, 0xd1, 0x44, 0x25, 0x0e, 0x3b, 0x29, 0xcf, 0x04, 0x6d, 0x67, 0xcf, 0x4a, 0x43, 0xfd, 0xb0,
	0x36, 0xde, 0x29, 0xe8, 0x71, 0x9b, 0xd6, 0x41, 0x7a, 0x34, 0xbb, 0xcc, 0xff, 0x69, 0xb4, 0xfd,
	0x53, 0x3b, 0x7e, 0x06, 0x73, 0xdd, 0xa1, 0xf7, 0x9f, 0x6e, 0x7f, 0xe6, 0x0f, 0xc8, 0xc6, 0x56,
	0xa0, 0xa7, 0xfe, 0xd6, 0x3b, 0x92, 0xf2, 0x41, 0x93, 0xab, 0x71, 0x3e, 0x5c, 0x30, 0xdb, 0xbb,
	0x4b, 0x96, 0x47, 0xf1, 0xca, 0xf7, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xec, 0x5c, 0x5a, 0x4b,
	0x98, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataPacketMessageContainerServiceClient is the client API for DataPacketMessageContainerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataPacketMessageContainerServiceClient interface {
	//here using stream keword which mean i just do one request only it just give me the multiple stream response (here is the  1st power of gRPC (Micorservices))
	DataPacketService(ctx context.Context, in *DataPacketRequest, opts ...grpc.CallOption) (DataPacketMessageContainerService_DataPacketServiceClient, error)
}

type dataPacketMessageContainerServiceClient struct {
	cc *grpc.ClientConn
}

func NewDataPacketMessageContainerServiceClient(cc *grpc.ClientConn) DataPacketMessageContainerServiceClient {
	return &dataPacketMessageContainerServiceClient{cc}
}

func (c *dataPacketMessageContainerServiceClient) DataPacketService(ctx context.Context, in *DataPacketRequest, opts ...grpc.CallOption) (DataPacketMessageContainerService_DataPacketServiceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DataPacketMessageContainerService_serviceDesc.Streams[0], "/DataPacketMessageContainerService/DataPacketService", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataPacketMessageContainerServiceDataPacketServiceClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DataPacketMessageContainerService_DataPacketServiceClient interface {
	Recv() (*DataPacketResponse, error)
	grpc.ClientStream
}

type dataPacketMessageContainerServiceDataPacketServiceClient struct {
	grpc.ClientStream
}

func (x *dataPacketMessageContainerServiceDataPacketServiceClient) Recv() (*DataPacketResponse, error) {
	m := new(DataPacketResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DataPacketMessageContainerServiceServer is the server API for DataPacketMessageContainerService service.
type DataPacketMessageContainerServiceServer interface {
	//here using stream keword which mean i just do one request only it just give me the multiple stream response (here is the  1st power of gRPC (Micorservices))
	DataPacketService(*DataPacketRequest, DataPacketMessageContainerService_DataPacketServiceServer) error
}

func RegisterDataPacketMessageContainerServiceServer(s *grpc.Server, srv DataPacketMessageContainerServiceServer) {
	s.RegisterService(&_DataPacketMessageContainerService_serviceDesc, srv)
}

func _DataPacketMessageContainerService_DataPacketService_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DataPacketRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DataPacketMessageContainerServiceServer).DataPacketService(m, &dataPacketMessageContainerServiceDataPacketServiceServer{stream})
}

type DataPacketMessageContainerService_DataPacketServiceServer interface {
	Send(*DataPacketResponse) error
	grpc.ServerStream
}

type dataPacketMessageContainerServiceDataPacketServiceServer struct {
	grpc.ServerStream
}

func (x *dataPacketMessageContainerServiceDataPacketServiceServer) Send(m *DataPacketResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _DataPacketMessageContainerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DataPacketMessageContainerService",
	HandlerType: (*DataPacketMessageContainerServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DataPacketService",
			Handler:       _DataPacketMessageContainerService_DataPacketService_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "basic/server-streaming-API/proto/messages.proto",
}
